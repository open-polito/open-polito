name: react-native-android-build-apk
on:
  workflow_dispatch:
  # push:
  #   branches:
  #     - master
jobs:
  call-tests:
    uses: ./.github/workflows/tests.yml
  build-android:
    needs: [call-tests]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'yarn'
      - name: Install npm dependencies
        run: |
          yarn
      - name: Cache Gradle Wrapper
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}

      - name: Cache Gradle dependencies
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-caches-
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Build helper (pre)
        run: yarn run prebuild
      - name: Run pre-build script
        env:
          DEV_KEYSTORE: ${{ secrets.DEV_KEYSTORE }}
          APP_SECRET: ${{ secrets.APP_SECRET }}
          GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}
        run: ./scripts/pre_build_dev.sh
      - name: Build dev release variant
        env:
          ENVFILE: .env.dev
        run:
          cd android/ && ./gradlew clean && ./gradlew assembleDevFlavorRelease --no-daemon
          -Pandroid.injected.signing.store.file=$GITHUB_WORKSPACE/dev-key-store.jks
          -Pandroid.injected.signing.store.password="${{ secrets.DEV_KEYSTORE_PASSWD }}"
          -Pandroid.injected.signing.key.alias="${{ secrets.DEV_KEYSTORE_ALIAS }}"
          -Pandroid.injected.signing.key.password="${{ secrets.DEV_KEY_PASSWD }}"
          -PdeploymentKeyDev="${{ secrets.DEPLOYMENT_KEY_DEV }}"
      - name: Run post-build script
        if: always()
        run: ./scripts/post_build_dev.sh
      - name: Build helper (post)
        if: always()
        run: yarn run postbuild
      - name: Upload ARM64 binary
        uses: actions/upload-artifact@v3
        with:
          name: arm64
          path: android/app/build/outputs/apk/devFlavor/release/*_arm64-v8a.apk
      - name: Upload ARMEABI binary
        uses: actions/upload-artifact@v3
        with:
          name: armeabi-v7a
          path: android/app/build/outputs/apk/devFlavor/release/*_armeabi-v7a.apk
      - name: Upload universal binary
        uses: actions/upload-artifact@v3
        with:
          name: universal
          path: android/app/build/outputs/apk/devFlavor/release/*_universal.apk
